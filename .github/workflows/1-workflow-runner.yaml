---
name: workflow-runner
# --- Description ------------------------------------------------------------
# "Outermost" workflow
# - Triggers on cron, PR, push-to-main, or manual
# - Exposes 'static' environment variables to subsequent tasks
# - Sets up stack build for each version of python
# ----------------------------------------------------------------------------

on: # yamllint disable-line rule:truthy
  schedule:
    # # at: 01:00 on the first of every month
    - cron: "0 1 1 * *"
  pull_request:
    paths-ignore:
      # - ".github/**"
      - docs/**
      - scripts/**
      - '*.md'
      - '**/.gitignore'
      - docker-compose.yaml
      - LICENSE
  push:
    branches:
      - main
    paths-ignore:
      # - ".github/**"
      - docs/**
      - scripts/**
      - '*.md'
      - '**/.gitignore'
      - docker-compose.yaml
      - LICENSE
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  # group: ${{ github.ref }}
  cancel-in-progress: true

env:
  platforms: "linux/amd64,linux/arm64"
  gh_registry: ghcr.io/ninerealmlabs
  d_registry: docker.io/ninerealmlabs
  owner: ninerealmlabs

jobs:
  export-envs:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ env.platforms }}
      gh_registry: ${{ env.gh_registry }}
      d_registry: ${{ env.d_registry }}
      owner: ${{ env.owner }}
    steps:
      - run: echo "Exposing env vars to downstream jobs"

  python-loop:
    strategy:
      matrix:
        python_version: [3.8.*, 3.9.*, 3.10.*]
    needs: [export-envs]
    if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
    uses: ./.github/workflows/2-build-stack.yaml
    with:
      python_version: ${{ matrix.python_version }}
      platforms: ${{ needs.export-envs.outputs.platforms }}
      gh_registry: ${{ needs.export-envs.outputs.gh_registry }}
      d_registry: ${{ needs.export-envs.outputs.d_registry }}
      owner: ${{ needs.export-envs.outputs.owner }}
