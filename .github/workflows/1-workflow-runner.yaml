---
name: workflow-runner
# --- Description ------------------------------------------------------------
# "Outermost" workflow
# - Triggers on cron, PR, push-to-main, or manual
# - Exposes 'static' environment variables to subsequent tasks
# - Sets up stack build for each version of python
# ----------------------------------------------------------------------------

on: # yamllint disable-line rule:truthy
  schedule:
    # # at: 01:00 on the first of every month
    - cron: "0 1 1 * *"
  pull_request:
    paths-ignore:
      # - ".github/**"
      - docs/**
      - scripts/**
      - '*.md'
      - '**/.gitignore'
      - docker-compose.yaml
      - LICENSE
  push:
    branches:
      - main
    paths-ignore:
      # - ".github/**"
      - docs/**
      - scripts/**
      - '*.md'
      - '**/.gitignore'
      - docker-compose.yaml
      - LICENSE
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  # group: ${{ github.ref }}
  cancel-in-progress: true

env:
  platforms: "linux/amd64,linux/arm64"
  gh_registry: ghcr.io/ninerealmlabs
  d_registry: docker.io/ninerealmlabs
  owner: ninerealmlabs

# # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
# # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
# permissions:
#   actions: read
#   contents: read
#   packages: write

jobs:
  # "Any environment variables set in an env context defined at the workflow level in the caller workflow
  #  are NOT propagated to the called workflow"
  export-envs:
    runs-on: self-hosted # ubuntu-latest
    outputs:
      platforms: ${{ env.platforms }}
      gh_registry: ${{ env.gh_registry }}
      d_registry: ${{ env.d_registry }}
      owner: ${{ env.owner }}
    steps:
      - run: echo "Exposing env vars to downstream jobs"

  # python loop can run in parallel
  build-stack-caller:
    strategy:
      # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      matrix:
        python_version: [3.8.*, 3.9.*, 3.10.*]
        # image_name: [base-env, ds-env, nlp-env, ts-env, web-env]
        # # 'include' is processed AFTER 'exclude'
        # exclude:
        #   - python_version: 3.10.*
        #     image_name: nlp-env
        #   - python_version: 3.10.*
        #     image_name: web-env
        # include:
        #   - image_name: base-env
        #     source_image: jupyter/minimal-notebook:latest
        #     # source-tag: latest
        #   - image_name: ds-env
        #     source_image: base-env
        #   - image_name: nlp-env
        #     source_image: ds-env
        #   - image_name: ts-env
        #     source_image: ds-env
        #   - image_name: web-env
        #     source_image: nlp-env

    if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
    uses: ./.github/workflows/2-build-stack.yaml
    secrets: inherit
    with:
      python_version: ${{ matrix.python_version }}
      # platforms: ${{ env.platforms }}
      # gh_registry: ${{ env.gh_registry }}
      # d_registry: ${{ env.d_registry }}
      # owner: ${{ env.owner }}
      platforms: ${{ needs.export-envs.outputs.platforms }}
      gh_registry: ${{ needs.export-envs.outputs.gh_registry }}
      d_registry: ${{ needs.export-envs.outputs.d_registry }}
      owner: ${{ needs.export-envs.outputs.owner }}
    needs: [export-envs]
