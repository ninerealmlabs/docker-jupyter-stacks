---
name: build-stack
# --- Description ------------------------------------------------------------
# Workflow that manages image dependencies & build order
# ----------------------------------------------------------------------------

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      python_version:
        description: python version
        required: true
        type: string
      platforms:
        description: Image platform architecture(s)
        required: true
        type: string
      gh_registry:
        description: Github registry (ghcr.io/<owner>)
        required: true
        type: string
      d_registry:
        description: Docker registry (docker.io/<owner>)
        required: true
        type: string
      owner:
        description: Registry name
        required: true
        type: string
  workflow_dispatch:

jobs:
  base-env:
    # needs: []
    if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
    uses: ./.github/workflows/3-build-test-tag.yaml
    secrets: inherit
    with:
      source_image: jupyter/minimal-notebook
      # source_tag: latest
      # source_sha: ''
      image_name: base-env
      python_version: ${{ inputs.python_version }}
      platforms: ${{ inputs.platforms }}
      gh_registry: ${{ inputs.gh_registry }}
      d_registry: ${{ inputs.d_registry }}
      owner: ${{ inputs.owner }}

  ds-env:
    needs: [base-env]
    if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
    uses: ./.github/workflows/3-build-test-tag.yaml
    secrets: inherit
    with:
      ### TODO: not passing image_digest
      source_image: ghcr.io/ninerealmlabs/base-env # @${{ needs.base-env.outputs.image_digest }}
      source_tag: ${{ needs.base-env.outputs.python_tag }}
      source_sha: ${{ needs.base-env.outputs.image_digest }}
      image_name: ds-env
      python_version: ${{ inputs.python_version }}
      platforms: ${{ inputs.platforms }}
      gh_registry: ${{ inputs.gh_registry }}
      d_registry: ${{ inputs.d_registry }}
      owner: ${{ inputs.owner }}

  # nlp-env:
  #   needs: [ds-env]
  #   if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
  #   uses: ./.github/workflows/3-build-test-tag.yaml
  #   secrets: inherit
  #   with:
  #     source_image: ghcr.io/ninerealmlabs/ds-env
  #     source_tag: ${{ needs.base-env.outputs.python_tag }}
  #     source_sha: ${{ needs.ds-env.outputs.image_digest }}
  #     image_name: nlp-env
  #     python_version: ${{ inputs.python_version }}
  #     platforms: ${{ inputs.platforms }}
  #     gh_registry: ${{ inputs.gh_registry }}
  #     d_registry: ${{ inputs.d_registry }}
  #     owner: ${{ inputs.owner }}

  # ts-env:
  #   needs: [ds-env]
  #   if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
  #   uses: ./.github/workflows/3-build-test-tag.yaml
  #   secrets: inherit
  #   with:
  #     source_image: ghcr.io/ninerealmlabs/ds-env
  #     source_tag: ${{ needs.base-env.outputs.python_tag }}
  #     source_sha: ${{ needs.ds-env.outputs.image_digest }}
  #     image_name: ts-env
  #     python_version: ${{ inputs.python_version }}
  #     platforms: ${{ inputs.platforms }}
  #     gh_registry: ${{ inputs.gh_registry }}
  #     d_registry: ${{ inputs.d_registry }}
  #     owner: ${{ inputs.owner }}

  # web-env:
  #   needs: [nlp-env]
  #   if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
  #   uses: ./.github/workflows/3-build-test-tag.yaml
  #   secrets: inherit
  #   with:
  #     source_image: ghcr.io/ninerealmlabs/nlp-env
  #     source_tag: ${{ needs.base-env.outputs.python_tag }}
  #     source_sha: ${{ needs.nlp-env.outputs.image_digest }}
  #     image_name: web-env
  #     python_version: ${{ inputs.python_version }}
  #     platforms: ${{ inputs.platforms }}
  #     gh_registry: ${{ inputs.gh_registry }}
  #     d_registry: ${{ inputs.d_registry }}
  #     owner: ${{ inputs.owner }}
