---
name: build-and-tag
# --- Description ------------------------------------------------------------
# - Builds (multi-arch) docker image & caches to ghcr.io (build-image.yaml)
# - Runs test (test-image.yaml)
# - Retags & pushes to docker registry (tag-image.yaml)
# ----------------------------------------------------------------------------

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      SOURCE_IMAGE:
        description: Parent/Source image name (repository/name)
        required: true
        type: string
      IMAGE_NAME:
        description: Image name
        required: true
        type: string
      PYTHON_VERSION:
        description: python version
        required: true
        type: string
      PLATFORMS:
        description: Image platform architectures
        required: true
        type: string
      GH_REGISTRY:
        description: Github registry (ghcr.io/<OWNER>)
        required: true
        type: string
      D_REGISTRY:
        description: Docker registry (docker.io/<OWNER>)
        required: true
        type: string
      OWNER:
        description: Registry name
        required: true
        type: string
    outputs:
      IMAGE_DIGEST: ${{ jobs.image-outputs.outputs.IMAGE_DIGEST }}
      # PYTHON_TAG: ${{ jobs.image-outputs.outputs.PYTHON_TAG }}
      # SHORT_NAMETAG: ${{ jobs.image-outputs.outputs.SHORT_NAMETAG }}
      # LONG_NAMETAG: ${{ jobs.image-outputs.outputs.LONG_NAMETAG }}
  workflow_dispatch:

env:
  # https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
  BRANCH_NAME: ${{ GITHUB_HEAD_REF || GITHUB_REF_NAME }}

jobs:
  build-image-caller:
    uses: ./.github/workflows/3-tasks/build-image.yaml
    with:
      SOURCE_IMAGE: ${{ inputs.SOURCE_IMAGE }}
      IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
      PYTHON_VERSION: ${{ inputs.PYTHON_VERSION }}
      PLATFORMS: ${{ inputs.PLATFORMS }}
      GH_REGISTRY: ${{ inputs.GH_REGISTRY }}
      OWNER: ${{ inputs.OWNER }}
    # if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'

  # get the outputs of 'build-image-caller' and set as outputs for this workflow
  image-outputs:
    runs-on: ubuntu-latest
    needs: build-image-caller
    outputs:
      IMAGE_DIGEST: ${{ needs.build-image-caller.outputs.IMAGE_DIGEST }}
      # PYTHON_TAG: ${{ jobs.build-image-caller.outputs.PYTHON_TAG }}
      # SHORT_NAMETAG: ${{ jobs.build-image-caller.outputs.SHORT_NAMETAG }}
      # LONG_NAMETAG: ${{ jobs.build-image-caller.outputs.LONG_NAMETAG }}
    steps:
      - run: echo "Return build-image-caller outputs as output of this workflow"

  ### possible issues with macOS/arm64
  # https://github.com/github/roadmap/issues/528
  # https://github.com/actions/setup-python/issues/547
  test-image-caller:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: build-image-caller

    uses: ./.github/workflows/3-tasks/test-image.yaml
    with:
      RUNS_ON: ${{ matrix.os }}
      REGISTRY: ${{ inputs.GH_REGISTRY }}
      OWNER: ${{ inputs.OWNER }}
      IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
      IMAGE_DIGEST: ${{ needs.build-image-caller.outputs.IMAGE_DIGEST }}
    # if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'

  ### Push to DockerHub if main branch / "release"
  tag-image-caller:
    runs-on: ubuntu-latest
    needs:
      - build-image-caller
      - test-image-caller

    # push to registry on main branch only
    # https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
    if: ${{ BRANCH_NAME }} == 'main'
    uses: ./.github/workflows/3-tasks/tag-image.yaml
    with:
      GH_REGISTRY: ${{ inputs.GH_REGISTRY }}
      D_REGISTRY: ${{ inputs.D_REGISTRY }}
      IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
      IMAGE_DIGEST: ${{ needs.build-image-caller.outputs.IMAGE_DIGEST }}
      SHORT_NAMETAG: ${{ needs.build-image-caller.outputs.SHORT_NAMETAG }}
      LONG_NAMETAG: ${{ needs.build-image-caller.outputs.LONG_NAMETAG }}
    # if: github.repository == 'ninerealmlabs/docker-jupyter-stacks'
