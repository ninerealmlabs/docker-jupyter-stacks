---
name: build-image
# --- Description ------------------------------------------------------------
# Build image using docker buildx for multi-arch support
# ----------------------------------------------------------------------------

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      source_image:
        description: Parent/Source full image name (registry/image)
        required: true
        type: string
      image_name:
        description: Image name
        required: true
        type: string
      python_version:
        description: python version
        required: true
        type: string
      platforms:
        description: Image platform architectures
        required: true
        type: string
      gh_registry:
        description: Github registry (ghcr.io/<owner>)
        required: true
        type: string
      owner:
        description: Registry name
        required: true
        type: string
    outputs:
      python_tag:
        description: Python version tag (python-<major.minor>)
        value: ${{ jobs.build-image-runner.outputs.python_tag }}
      short_nametag:
        description: Image name and short tag (image:python-<major.minor>)
        value: ${{ jobs.build-image-runner.outputs.short_nametag }}
      long_nametag:
        description: Image name and long tag (image:python-<major.minor>-<sha>)
        value: ${{ jobs.build-image-runner.outputs.long_nametag }}
      image_digest:
        description: Image digest
        value: ${{ jobs.build-image-runner.outputs.image_digest }}
  workflow_dispatch:


jobs:
  build-image-runner:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo üõí
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry ‚úÖ
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Login to DockerHub ‚úÖ
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_TOKEN }}

      - name: Get current date üóì
        id: date
        shell: bash
        run: |
          DATE=$(date +'%Y%m%d')
          echo "DATE: ${DATE}"
          echo "::set-output name=date::${DATE}"

      - name: Create tags üè∑
        id: tags
        shell: bash
        run: |
          GIT_SHA="${GITHUB_SHA:0:7}"
          PYTHON_TAG="python-$(echo ${python_version/'.*'/}"
          SHORT_NAMETAG="${image_name}:${python_tag}"
          LONG_NAMETAG="${image_name}:${python_tag}-${GIT_SHA}"
          # ------------------------------------------------------------------
          echo "GIT_SHA: ${GIT_SHA}"
          echo "PYTHON_TAG: ${PYTHON_TAG}"
          echo "SHORT_NAMETAG: ${SHORT_NAMETAG}"
          echo "LONG_NAMETAG: ${LONG_NAMETAG}"
          # ------------------------------------------------------------------
          echo "::set-output name=git_sha::${GIT_SHA}"
          echo "::set-output name=python_tag::${PYTHON_TAG}"
          echo "::set-output name=short_nametag::${SHORT_NAMETAG}"
          echo "::set-output name=long_nametag::${LONG_NAMETAG}"
        env:
          python_version: ${{ inputs.python_version }}
          image_name: ${{ inputs.image_name }}

      ### https://github.com/docker/build-push-action
      ### https://github.com/docker/buildx/blob/master/docs/reference/buildx_build.md
      - name: Build image üõ†
        id: build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          platforms: ${{ inputs.platforms }}
          context: src/${{ inputs.image_name }}
          # file: ./Dockerfile
          build-args: |
            SOURCE_IMAGE=${{ inputs.source_image }}
            PYTHON_VERSION=${{ inputs.python_version }}
            GIT_COMMIT=${{ steps.tags.outputs.git_sha }}
            BUILD_DATE=${{ steps.date.outputs.date }}
          # cache-from: type=gha
          cache-to: type=registry,ref=${{ inputs.gh_registry }}/${{ inputs.image_name }}:buildcache,mode=max
          push: true
          tags: |
            ${{ inputs.gh_registry }}/${{ steps.tags.outputs.short_nametag }}
            ${{ inputs.gh_registry }}/${{ steps.tags.outputs.long_nametag }}

      - name: Inspect image digest üî¨
        shell: bash
        run: echo ${{ steps.build.outputs.digest }}

      - name: Inspect new image üî¨
        shell: bash
        run: |
          docker pull ${{ inputs.gh_registry }}/${{ inputs.image_name }}@${{ steps.build.outputs.digest }}

    outputs:
      python_tag: ${{ steps.tags.outputs.python_tag }}
      short_nametag: ${{ steps.tags.outputs.short_nametag }}
      long_nametag: ${{ steps.tags.outputs.long_nametag }}
      image_digest: ${{ steps.build.outputs.digest }}
